import { calculateMahjongScore } from '../mahjong.js';
import { describe, it, expect } from 'vitest';

const cases = [
  {
    name: 'Mixed Shifted Chows',
    expected: 12,
    state: {
      concealedTiles: [
        'wan-4',
        'wan-6',
        'bamboo-6',
        'bamboo-7',
        'bamboo-8',
        'bamboo-2',
        'bamboo-3',
        'bamboo-4',
        'circle-3',
        'circle-3',
      ],
      declaredSets: [['circle-3', 'circle-4', 'circle-5']],
      lastTileInGame: false,
      lastTileOfKind: false,
      prevalentWind: 'flipped',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'flipped',
      winFromDiscard: false,
      winFromWall: true,
      winningTile: 'wan-5',
    },
  },
  {
    name: 'Test 1',
    expected: 8,
    state: {
      concealedTiles: [
        'bamboo-1',
        'bamboo-1',
        'bamboo-1',
        'bamboo-3',
        'bamboo-4',
        'bamboo-5',
        'bamboo-7',
        'bamboo-9',
        'circle-3',
        'circle-4',
        'circle-5',
        'wan-4',
        'wan-4',
      ],
      declaredSets: [],
      lastTileInGame: false,
      lastTileOfKind: false,
      prevalentWind: 'flipped',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'flipped',
      winFromDiscard: false,
      winFromWall: true,
      winningTile: 'bamboo-8',
    },
  },
  {
    name: 'Test 2',
    expected: 4,
    state: {
      concealedTiles: ['wind-west', 'wind-west', 'wind-west', 'bamboo-8', 'bamboo-9', 'wan-5', 'wan-5'],
      declaredSets: [
        ['bamboo-7', 'bamboo-8', 'bamboo-9'],
        ['circle-5', 'circle-6', 'circle-7'],
      ],
      lastTileInGame: false,
      lastTileOfKind: false,
      prevalentWind: 'wind-west',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'wind-east',
      winFromDiscard: true,
      winFromWall: false,
      winningTile: 'bamboo-7',
    },
  },
  {
    name: 'Test 3',
    expected: 9,
    state: {
      concealedTiles: [
        'bamboo-8',
        'bamboo-8',
        'wan-6',
        'wan-7',
        'wan-8',
        'wan-8',
        'wan-8',
        'wan-8',
        'bamboo-1',
        'bamboo-1',
      ],
      declaredSets: [['wan-4', 'wan-5', 'wan-6']],
      lastTileInGame: false,
      lastTileOfKind: false,
      prevalentWind: 'flipped',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'flipped',
      winFromDiscard: false,
      winFromWall: true,
      winningTile: 'bamboo-8',
    },
  },
  {
    name: 'Test 4',
    expected: 2,
    state: {
      concealedTiles: [
        'bamboo-2',
        'bamboo-2',
        'wan-1',
        'wan-1',
        'wan-1',
        'wan-2',
        'wan-3',
        'wan-4',
        'wan-4',
        'wan-4',
        'circle-5',
        'circle-6',
        'circle-7',
      ],
      declaredSets: [],
      lastTileInGame: false,
      lastTileOfKind: false,
      prevalentWind: 'flipped',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'flipped',
      winFromDiscard: false,
      winFromWall: true,
      winningTile: 'bamboo-2',
    },
  },
  {
    name: 'Seven Pairs',
    expected: 24,
    state: {
      concealedTiles: [
        'wan-5',
        'wan-5',
        'wan-6',
        'wan-6',
        'wan-9',
        'wan-9',
        'circle-8',
        'circle-8',
        'bamboo-1',
        'bamboo-1',
        'bamboo-5',
        'bamboo-5',
        'wind-north',
      ],
      declaredSets: [],
      lastTileInGame: false,
      lastTileOfKind: false,
      prevalentWind: 'flipped',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'flipped',
      winFromDiscard: true,
      winFromWall: false,
      winningTile: 'wind-north',
    },
  },
  {
    name: 'Test 5',
    expected: 6,
    state: {
      concealedTiles: [
        'circle-4',
        'circle-5',
        'circle-6',
        'wan-5',
        'wan-6',
        'wan-7',
        'circle-1',
        'circle-2',
        'circle-3',
        'circle-1',
      ],
      declaredSets: [['wan-5', 'wan-6', 'wan-7']],
      lastTileInGame: false,
      lastTileOfKind: false,
      prevalentWind: 'flipped',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'flipped',
      winFromDiscard: false,
      winFromWall: true,
      winningTile: 'circle-1',
    },
  },
  {
    name: 'Test 6',
    expected: 6,
    state: {
      concealedTiles: ['wan-5', 'wan-7', 'wan-3', 'wan-3'],
      declaredSets: [
        ['wan-7', 'wan-8', 'wan-9'],
        ['circle-2', 'circle-3', 'circle-4'],
        ['circle-7', 'circle-8', 'circle-9'],
      ],
      lastTileInGame: false,
      lastTileOfKind: false,
      prevalentWind: 'flipped',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'flipped',
      winFromDiscard: false,
      winFromWall: true,
      winningTile: 'wan-6',
    },
  },
  {
    name: 'Test 7',
    expected: 16,
    state: {
      concealedTiles: [
        'dragon-red',
        'dragon-red',
        'dragon-red',
        'wan-4',
        'wan-5',
        'wan-6',
        'circle-3',
        'circle-4',
        'circle-5',
        'bamboo-3',
        'bamboo-4',
        'bamboo-5',
        'bamboo-9',
      ],
      declaredSets: [],
      lastTileInGame: true,
      lastTileOfKind: false,
      prevalentWind: 'flipped',
      replacementTile: false,
      robbingTheKong: false,
      seatWind: 'flipped',
      winFromDiscard: false,
      winFromWall: true,
      winningTile: 'bamboo-9',
    },
  },
];

describe('calculateMahjongScore (cases)', () => {
  cases.forEach(({ name, state, expected }) => {
    // TODO: run all tests
    if (name === 'Mixed Shifted Chows') {
      it.only(`returns ${expected} for ${name}`, () => {
        expect(calculateMahjongScore(state)).toBe(expected);
      });
    }
    // it.only(`returns ${expected} for ${name}`, () => {
    //   expect(calculateMahjongScore(state)).toBe(expected);
    // });
  });
});
